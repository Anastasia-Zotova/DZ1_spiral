// DZ spiral.cpp: определяет точку входа для приложения.
//

#include "DZ spiral.h"
using namespace std;


//Задание: квадратную матрицу заполнять числами по спирали.

int main()
{
	setlocale(0, "rus");
	int k = 1; //числа для ввода
	int n; 
	cout << "введите размерность матрицы (меньше 100)" << endl;
	cin >> n; //ввожу размерность матрицы
	const int a = 100;
	int A[a][a]; //создаю пустую квадратную матрицу
	//нужно понять, n четное или нет?
	int s, ds;
	if ( n % 2 == 0) {
		s = n / 2 - 1; //число кругов спирали
		ds = 3;       // число отрезков последнего круга спирали
	}
	else {
		s = (n - 1) / 2; //число кругов спирали
		ds = 1;        // число отрезков последнего круга спирали
	}

	if (s != 0) {
		for (int p = 1; p <= s; p++) {
			// заполнение верхней горизонтальной строки
			int i = p - 1;
			for (int j = p - 1; j <= n - p; j++) {
				A[i][j] = k;
				k++;
			}
			// заполнение правого вертикального столбца
			int j = n - p;
			for (int i = p; i <= n - p; i++) {
				A[i][j] = k;
				k++;
			}
			// заполнение нижней горизонтальной строки
			i = n - p;
			for (int j = n - p - 1; j >= p - 1; j--) {
				A[i][j] = k;
				k++;
			}
			// заполнение левого вертикального столбца
			j = p - 1;
			for (int i = n - p - 1; i > p - 1; i--) {
				A[i][j] = k;
				k++;
			}
		}
	}
	//заполняю неполные круги спирали
	if (ds == 3) {
		A[s][s] = k;
		k++;
		A[s][s+1] = k;
		k++;
		A[s+1][s+1] = k;
		k++;
		A[s+1][s] = k;
	}
	if (ds == 1) {
		A[s][s] = k;
	}

	//вывод матрицы
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << A[i][j] << ' ';
		}
		cout << endl;
	}
	return 0;
}
